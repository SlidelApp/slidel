name: CI

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  linting:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - uses: actions/setup-python@v3
      with:
        python-version: "3.10"

    - name: "Frontend: Install dependencies"
      run: |
        python -m pip install --upgrade pip
        pip install poetry
        poetry install --with dev
      working-directory: ./frontend_py

    - name: "Frontend: Run linting"
      run: poetry run pre-commit run --all-files
      working-directory: ./frontend_py

    - name: "Backend: Install dependencies"
      run: |
        python -m pip install --upgrade pip
        pip install poetry
        poetry install --with dev
      working-directory: ./backend

    - name: "Backend: Run linting"
      run: poetry run pre-commit run --all-files
      working-directory: ./backend


  test:
        needs: linting
        strategy:
          fail-fast: false
          matrix:
            os: [ "ubuntu-latest" ]
            python-version: [ "3.10", "3.11", "3.12" ]
        runs-on: ${{ matrix.os }}

        steps:
          - name: Check out repository
            uses: actions/checkout@v4

          - uses: actions/setup-python@v3
            with:
              python-version: ${{ matrix.python-version }}

          # - name: "Frontend: Install dependencies"
          #   run: |
          #     python -m pip install --upgrade pip
          #     pip install poetry
          #     poetry install --with dev
          #   working-directory: ./frontend_py

          # - name: "Frontend: Run tests"
          #   run: poetry run tox -e py
          #   working-directory: ./frontend_py

          - name: "Backend: Install dependencies"
            run: |
              python -m pip install --upgrade pip
              pip install poetry
              poetry install --with dev
            working-directory: ./backend

          - name: "Backend: Run tests"
            run: poetry run tox -e py
            working-directory: ./backend