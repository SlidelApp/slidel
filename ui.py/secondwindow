from PySide6.QtCore import Qt, QSize
from PySide6.QtWidgets import QApplication, QMainWindow, QWidget, QPushButton, QVBoxLayout, QLabel
from PySide6.QtGui import QPixmap, QIcon
import sys

class MainWindow(QMainWindow):
    def __init__(self):
        super().__init__()

        self.setGeometry(100, 100, 1320, 900)
        self.setWindowTitle("Main Window 1")
        self.setStyleSheet('background-color:#000000')

        # Create a new frame
        self.side_frame = QWidget(self)
        self.side_frame.setGeometry(1150, 20, 150, 865)  # Adjust the position and size as needed
        self.side_frame.setStyleSheet('background-color:#19222A;  border-radius: 50px;')

        # Create a vertical layout for the frame
        self.layout = QVBoxLayout(self.side_frame)
        self.layout.setSpacing(40)  # Set vertical spacing between buttons to 0

        # Add some empty space at the top
        self.layout.addSpacing(40)

        # List of icon paths and button names
        button_data = [
            {"icon": "zoomin.png", "name": "Zoom In"},
            {"icon": "zoomout.png", "name": "Zoom Out"},
            {"icon": "eraser.png", "name": "Eraser"},
            {"icon": "pre.png", "name": "Previous Slide"},
            {"icon": "nextslide.png", "name": "Next Slide"},
            {"icon": "exit.png", "name": "Exit"}
        ]

        # Add push buttons and labels to the layout
        for data in button_data:
            button = QPushButton(self.side_frame)
            button.setStyleSheet("background-color: #F8C40D; color: white; font-size: 16px; font-weight: bold ; border: 1px solid #F8C40D; padding: 5px; border-radius: 5px;")
            button.setFixedSize(70, 40)  # Set fixed size for each button
            button.setIcon(QIcon(data["icon"]))
            button.setIconSize(QSize(30, 30))
            self.layout.addWidget(button)

            label = QLabel(data["name"], self.side_frame)
            label.setAlignment(Qt.AlignCenter)
            label.setStyleSheet("color: white; font-size: 14px;")
            label.setVisible(False)  # Initially hide the label
            self.layout.addWidget(label)

            # Connect hover events
            button.enterEvent = lambda event, label=label: label.setVisible(True)
            button.leaveEvent = lambda event, label=label: label.setVisible(False)

        # Adjust spacing between buttons and frame
        self.layout.addStretch()

        # Add some empty space at the bottom
        self.layout.addSpacing(40)

        # Load the icon image for the main window label
        icon_path = "download.png"  # Replace with the actual path to your icon image
        icon = QPixmap(icon_path)

        # Add a label to the top-left corner of the main window
        self.label = QLabel(self)
        self.label.setGeometry(60, 50, 200, 60)
        self.label.setAlignment(Qt.AlignLeft | Qt.AlignVCenter)
        self.label.setStyleSheet("color: white; font-size: 20px; font-weight: bold ; border: 1px solid #F8C40D; padding: 2px;")
        self.label.setText(f'<img src="{icon.toImage()}" width="30" height="30"> Eren Jaeger')

if __name__ == "__main__":
    app = QApplication([])
    main_window = MainWindow()
    main_window.show()
    sys.exit(app.exec())
